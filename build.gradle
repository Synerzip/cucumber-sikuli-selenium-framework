import org.apache.tools.ant.taskdefs.condition.Os;

apply plugin: 'java'

ext {
	if (Os.isFamily(Os.FAMILY_UNIX)) {
		os = 'linux'
	}
	if (Os.isFamily(Os.FAMILY_MAC)) {
		os = 'macosx'
	}
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		os = 'windows'
	}
	arch = System.getProperty("os.arch");

	if(arch == 'amd64'){
		arch = 'x86_64'
	}
	opencvBinaryClassifer = os+'-'+arch;
	
	// The drivers we want to use
	drivers = ["firefox", "chrome", "phantomJs"]

	ext {
		seleniumVersion = '2.45.0'
		chromeDriverVersion = '2.14'
		phantomJsVersion = '2.45.0'
	}

	
}

apply from: "gradle/osSpecificDownloads.gradle"

repositories { mavenCentral() }

configurations {
	cucumberRuntime { extendsFrom testRuntime }
}

drivers.each { driver ->
	task "${driver}Test"(type: Test) {
		reports {
			html.destination = reporting.file("$name/tests")
			junitXml.destination = file("$buildDir/test-results/$name")
		}

		outputs.upToDateWhen { false }  // Always run tests

		
	}
}

//chromeTest {
//	dependsOn unzipChromeDriver
//
//	def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
//	systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
//}


task cucumber() {
	dependsOn assemble, compileJava, unzipChromeDriver
	
	
	def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
	
	
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
			
			args = [
				'--plugin',
				'pretty',
				'--glue',
				'com.synerzip.testframework',
				'src/main/resources/features'				
			]
			
			jvmArgs = [
				'-Xmx500M'
			]
		}
	}
}

dependencies {	

	compile group: 'org.bytedeco', name: 'javacv', version: '0.9'
	compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '2.4.9-0.9', classifier: opencvBinaryClassifer
	compile group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '2.3-0.9', classifier: opencvBinaryClassifer
	compile group: 'org.bytedeco.javacpp-presets', name: 'libdc1394', version: '2.2.2-0.9', classifier: opencvBinaryClassifer

	compile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: '2.45.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '2.45.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '2.45.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.45.0'


	compile 'info.cukes:cucumber-java:1.2.2'
	compile 'info.cukes:cucumber-junit:1.2.2'
	compile 'info.cukes:cucumber-spring:1.2.2'
	compile 'org.bytedeco:javacpp:0.11'
	compile 'org.bytedeco:javacv:0.10'
	
	compile 'org.springframework:spring-context-support:4.1.4.RELEASE'
	compile 'org.springframework:spring-test:4.1.6.RELEASE'


	compile 'org.sikuli:sikuli-api:1.2.0'

	compile 'junit:junit:4.11'

	compile 'org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}'
	compile 'org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}'
	compile 'org.seleniumhq.selenium:selenium-api:${seleniumVersion}'
	compile 'org.seleniumhq.selenium:selenium-java:${seleniumVersion}'
}



